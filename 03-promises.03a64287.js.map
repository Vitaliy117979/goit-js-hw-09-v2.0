{"mappings":"qhBAkDA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UA6B/B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAO,GAG3BA,EAAM,G,CAtCbN,EAAKC,KAAKa,iBAAiB,UAC3B,SAA4BC,GAC1BA,EAAEC,iBAGJ,aAEuBV,MAACA,MAAKW,KAAEA,KAAIC,OAAEA,QAAUlB,EAAKC,KAAKkB,UACvD,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAQE,GAAK,EACpCC,QAAQC,IAAI,KAGVlB,EAAcgB,EAAGd,OAGdiB,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEzEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEvEA,OAASW,KACTI,QAAQC,IAAI,I,CAnBZO,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n// const formElements = {delay, step, amount, jsButton} = refs.form.elements\n\n// refs.form.addEventListener('submit', preventDefaultForm);\n// function preventDefaultForm(e) {\n//   e.preventDefault()\n//   setTimeout(() => {\n//     createAmount(amount.value);\n//   }, delay.value);\n// }\n// function createAmount(amount) {\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const delay = Number(step.value) * [i - 1] + Number(refs.form.elements.delay.value);\n//     const position = [i];\n//     console.log(delay);\n  \n//   createPromise(position, delay) \n  \n\n//     .then(({ position, delay }) => {\n//       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n// }\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay});\n//         // Fulfill\n//       } else {\n//         reject({ position, delay});\n//         // Reject\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\n\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', preventDefaultForm);\nfunction preventDefaultForm(e) {\n  e.preventDefault()\n    createAmount();\n}\nfunction createAmount() {\n\n  const formElements = {delay, step, amount} = refs.form.elements\n  for (let i = 1; i <= amount; i += 1) {\nconsole.log(333);\n\n  \n  createPromise(i, delay) \n  \n\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    delay += step\n    console.log('e')\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay});\n        // Fulfill\n      } else {\n        reject({ position, delay});\n        // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","step","amount","elements","i","console","log","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createAmount"],"version":3,"file":"03-promises.03a64287.js.map"}