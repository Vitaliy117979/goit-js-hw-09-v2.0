{"mappings":"iiBAkDA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UA6B/B,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAGpBA,E,IAtCPN,EAAKC,KAAKa,iBAAiB,UAC3B,SAA4BC,GAC1BA,EAAEC,iBAGJ,WAEuBC,EAAwBjB,EAAKC,KAAKiB,SAAjCZ,MAAKW,EAALX,MAAOa,KAAIF,EAAJE,KAAMC,OAAMH,EAANG,OACnC,I,MAASC,EAAI,EAAGA,GAAKD,OAAQC,GAAK,EACpCC,QAAQC,IAAI,KAGVnB,EAAciB,EAAGf,OAGdkB,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MACjBqB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MAClBqB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAErEpB,OAASa,KACTG,QAAQC,IAAI,I,CAnBZU,E","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n// const formElements = {delay, step, amount, jsButton} = refs.form.elements\n\n// refs.form.addEventListener('submit', preventDefaultForm);\n// function preventDefaultForm(e) {\n//   e.preventDefault()\n//   setTimeout(() => {\n//     createAmount(amount.value);\n//   }, delay.value);\n// }\n// function createAmount(amount) {\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const delay = Number(step.value) * [i - 1] + Number(refs.form.elements.delay.value);\n//     const position = [i];\n//     console.log(delay);\n  \n//   createPromise(position, delay) \n  \n\n//     .then(({ position, delay }) => {\n//       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n// }\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay});\n//         // Fulfill\n//       } else {\n//         reject({ position, delay});\n//         // Reject\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\n\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', preventDefaultForm);\nfunction preventDefaultForm(e) {\n  e.preventDefault()\n    createAmount();\n}\nfunction createAmount() {\n\n  const formElements = {delay, step, amount} = refs.form.elements\n  for (let i = 1; i <= amount; i += 1) {\nconsole.log(333);\n\n  \n  createPromise(i, delay) \n  \n\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    delay += step\n    console.log('e')\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay});\n        // Fulfill\n      } else {\n        reject({ position, delay});\n        // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","ref","elements","step","amount","i","console","log","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createAmount"],"version":3,"file":"03-promises.da8c3e8d.js.map"}