{"mappings":"iiBAgDA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAGpBA,E,KAKM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAC3B,SAA4BC,GAC1BA,EAAEC,iBAQF,IAJA,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACnCC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAEpCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGN,GAChBO,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,OAG9C2B,QAAQC,IAAI5B,EAAMiB,M,IAEnBY,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOM,QACd,sBAAqCJ,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG7Cc,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n// const formElements = {delay, step, amount, jsButton} = refs.form.elements\n\n// refs.form.addEventListener('submit', preventDefaultForm);\n// function preventDefaultForm(e) {\n//   e.preventDefault()\n//   setTimeout(() => {\n//     createAmount(amount.value);\n//   }, delay.value);\n// }\n// function createAmount(amount) {\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const delay = Number(step.value) * [i - 1] + Number(refs.form.elements.delay.value);\n//     const position = [i];\n//     console.log(delay);\n\n//   createPromise(position, delay)\n\n//     .then(({ position, delay }) => {\n//       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n// }\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay});\n//         // Fulfill\n//       } else {\n//         reject({ position, delay});\n//         // Reject\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', preventDefaultForm);\nfunction preventDefaultForm(e) {\n  e.preventDefault();\n\n\n  // const formElements = ({ delay, step, amount } = refs.form.elements);\n  let delay = Number(e.currentTarget.delay.value)\n  const step = Number(e.currentTarget.step.value)\n  const amount = Number(e.currentTarget.amount.value)\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n          \n        );\n        console.log(delay.value);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n        delay += step;\n  }\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.9ae60e1c.js.map"}