{"mappings":"qhBAgDA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAG5BA,EAAM,G,EAKA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAC3B,SAA4BC,GAC1BA,EAAEC,iBAIF,IAAIC,EAAQC,OAAOH,EAAEI,cAAchB,MAAMiB,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCtB,EAAcsB,EAAGN,GAChBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,OAGtCyB,QAAQC,IAAI1B,EAAMiB,MAAM,IAEzBU,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOK,QACd,sBAAoB7B,QAAeC,MAAU,IAG/Cc,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n// };\n// const formElements = {delay, step, amount, jsButton} = refs.form.elements\n\n// refs.form.addEventListener('submit', preventDefaultForm);\n// function preventDefaultForm(e) {\n//   e.preventDefault()\n//   setTimeout(() => {\n//     createAmount(amount.value);\n//   }, delay.value);\n// }\n// function createAmount(amount) {\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     const delay = Number(step.value) * [i - 1] + Number(refs.form.elements.delay.value);\n//     const position = [i];\n//     console.log(delay);\n\n//   createPromise(position, delay)\n\n//     .then(({ position, delay }) => {\n//       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n// }\n// }\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay});\n//         // Fulfill\n//       } else {\n//         reject({ position, delay});\n//         // Reject\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', preventDefaultForm);\nfunction preventDefaultForm(e) {\n  e.preventDefault();\n\n\n  // const formElements = ({ delay, step, amount } = refs.form.elements);\n  let delay = Number(e.currentTarget.delay.value)\n  const step = Number(e.currentTarget.step.value)\n  const amount = Number(e.currentTarget.amount.value)\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`\n          \n        );\n        console.log(delay.value);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n        delay += step;\n  }\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.8ee4b4d9.js.map"}